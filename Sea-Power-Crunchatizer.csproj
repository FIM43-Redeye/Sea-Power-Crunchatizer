<Project Sdk="Microsoft.NET.Sdk">

    <Import Project="GamePath.props" />


    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{1F2CCF6F-72A7-4F76-971A-B693B7B26BD3}</ProjectGuid>
        <OutputType>Library</OutputType>
        <RootNamespace>Sea_Power_Crunchatizer</RootNamespace>
        <AssemblyName>Sea_Power_Crunchatizer</AssemblyName>
        <TargetFramework>netstandard2.1</TargetFramework>

        <!-- FIX for CS8400: Specify a C# language version that supports global using directives (C# 10.0 or greater). 'latest' is often good. -->
        <LangVersion>latest</LangVersion>

        <!-- FIX for CS0579: Disable automatic AssemblyInfo generation by the SDK, as you have Properties\AssemblyInfo.cs -->
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>

        <!-- Optional modern C# project settings (kept for convenience, but you could remove if you don't want them) -->
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <NoWarn>$(NoWarn);MSB3277</NoWarn>

        <!-- These were removed in the last revision as they are often redundant in SDK-style projects, keeping it clean -->
        <!-- <AppDesignerFolder>Properties</AppDesignerFolder> -->
        <!-- <FileAlignment>512</FileAlignment> -->
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>

    <ItemGroup>
        <None Include="CrunchatizerCore_Melon.cs.bak"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Explicit references to game/modding specific DLLs (these are correct) -->
        <Reference Include="0Harmony">
            <HintPath>$(GameDir)\BepInEx\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(GameDir)\BepInEx\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx.Harmony">
            <HintPath>$(GameDir)\BepInEx\core\BepInEx.Harmony.dll</HintPath>
        </Reference>
        <Reference Include="Seapower-Scripts">
            <HintPath>$(GameDir)\Sea Power_Data\Managed\Seapower-Scripts.dll</HintPath>
        </Reference>
        <Reference Include="UniRx">
            <HintPath>$(GameDir)\Sea Power_Data\Managed\UniRx.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine">
            <HintPath>$(GameDir)\Sea Power_Data\Managed\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(GameDir)\Sea Power_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <!-- IMPORTANT: Add any other UnityEngine.*Module.dlls that your code directly references.
             The initial log showed many, but only those explicitly used by *your* code need to be here.
             If you encounter `The type or namespace name 'UI' could not be found` errors later,
             you'll need to add the corresponding `UnityEngine.UIModule.dll` reference. -->
    </ItemGroup>





</Project>